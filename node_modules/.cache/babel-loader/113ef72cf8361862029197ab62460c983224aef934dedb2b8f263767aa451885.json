{"ast":null,"code":"// import React, { useState } from \"react\";\n// import FormValidation from \"../errorHandling/FormValidation\";\n// import Repository from \"../services/Repository\"\n// import { Link } from 'react-router-dom';\n// import '../App.css';\n// import { useHistory } from 'react-router-dom';\n\n// export const SignupPage = (props) => {\n\n//     const history = useHistory();\n\n//     const [firstName, setFirstName] = useState(\"\");\n//     const [lastName, setLastName] = useState(\"\");\n//     const [username, setUsername] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [role, setRole] = useState(\"\");\n//     const [userID, setUserId] = useState(\"\");\n//     const [errors, setErrors] = useState({});\n//     const [status, setStatus] = useState(\"\");\n\n//     const handleSubmit = (event) => {\n\n//         setErrors(FormValidation({ firstName, lastName, username, email, password, role, userID }));\n\n//         const user = { firstName, lastName, username, email, password, role, userID }\n\n//         if (Object.keys(FormValidation({ firstName, lastName, username, email, password, role, userID })).length === 0) {\n\n//             Repository.signupUser(user)\n//                 .then(data => {\n//                     console.log(data);\n//                     if (data) {\n//                         history.push('/signup-success')\n//                     }\n//                 })\n//                 .catch(error => {\n\n//                     if (error.response && error.response.status === 409) {\n//                         setStatus(\"Username is already taken, please choose another username.\");\n//                     } else {\n\n//                         throw error;\n//                     }\n//                 });\n\n//         }\n//         event.preventDefault();\n\n//     }\n\n//     return (\n//         <div className=\"App\">\n//             <div className=\"auth-form-container\" >\n//                 {status && <p className=\"status\">{status}</p>}\n//                 <h1>Register</h1><br />\n//                 <form className=\"register-form\" onSubmit={handleSubmit}>\n//                     <label htmlFor=\"firstName\">First Name</label>\n//                     <input value={firstName} onChange={(e) => setFirstName(e.target.value)} name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" />\n//                     {errors.firstName && <p className=\"error\">{errors.firstName}</p>}\n\n//                     <label htmlFor=\"lastName\">Last Name</label>\n//                     <input value={lastName} onChange={(e) => setLastName(e.target.value)} name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" />\n//                     {errors.lastName && <p className=\"error\">{errors.lastName}</p>}\n\n//                     <label htmlFor=\"username\">Username</label>\n//                     <input value={username} onChange={(e) => setUsername(e.target.value)} name=\"username\" id=\"username\" placeholder=\"Username\" />\n//                     {errors.username && <p className=\"error\">{errors.username}</p>}\n\n//                     <label htmlFor=\"email\">Email</label>\n//                     <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\n//                     {errors.email && <p className=\"error\">{errors.email}</p>}\n\n//                     <label htmlFor=\"password\">password</label>\n//                     <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"******\" id=\"password\" name=\"password\" />\n//                     {errors.password && <p className=\"error\">{errors.password}</p>}\n\n//                     <label htmlFor=\"role\">Role</label>\n//                     <select value={role} onChange={e => setRole(e.target.value)}>\n//                         <option placeholder=\"Select Role\"> </option>\n//                         <option value=\"Student\">Student</option>\n//                         <option value=\"Teacher\">Teacher</option>\n//                     </select>\n//                     {errors.role && <p className=\"error\">{errors.role}</p>}\n\n//                     <label htmlFor=\"userID\">UserID</label>\n//                     <input value={userID} onChange={(e) => setUserId(e.target.value)} placeholder=\"UserID\" id=\"userID\" name=\"userID\" />\n//                     {errors.userID && <p className=\"error\">{errors.userID}</p>}\n\n//                     <button className=\"registerbtn\" type=\"Submit\" onClick={handleSubmit}><b>Register</b></button>\n//                 </form>\n//                 <br />\n//                 <h4>Already have an account?</h4>\n//                 <Link to=\"/login\" className=\"link-button\"><h5>Login here</h5></Link>\n\n//             </div>\n//         </div>\n//     )\n// }","map":{"version":3,"names":[],"sources":["/home/malshani/Documents/My react projects/teaching-institution-management-system_frontend/src/pages/SignupPage.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import FormValidation from \"../errorHandling/FormValidation\";\n// import Repository from \"../services/Repository\"\n// import { Link } from 'react-router-dom';\n// import '../App.css';\n// import { useHistory } from 'react-router-dom';\n\n// export const SignupPage = (props) => {\n\n//     const history = useHistory();\n\n//     const [firstName, setFirstName] = useState(\"\");\n//     const [lastName, setLastName] = useState(\"\");\n//     const [username, setUsername] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [role, setRole] = useState(\"\");\n//     const [userID, setUserId] = useState(\"\");\n//     const [errors, setErrors] = useState({});\n//     const [status, setStatus] = useState(\"\");\n\n\n//     const handleSubmit = (event) => {\n\n//         setErrors(FormValidation({ firstName, lastName, username, email, password, role, userID }));\n\n//         const user = { firstName, lastName, username, email, password, role, userID }\n\n//         if (Object.keys(FormValidation({ firstName, lastName, username, email, password, role, userID })).length === 0) {\n\n//             Repository.signupUser(user)\n//                 .then(data => {\n//                     console.log(data);\n//                     if (data) {\n//                         history.push('/signup-success')\n//                     }\n//                 })\n//                 .catch(error => {\n\n//                     if (error.response && error.response.status === 409) {\n//                         setStatus(\"Username is already taken, please choose another username.\");\n//                     } else {\n\n//                         throw error;\n//                     }\n//                 });\n\n//         }\n//         event.preventDefault();\n\n//     }\n\n//     return (\n//         <div className=\"App\">\n//             <div className=\"auth-form-container\" >\n//                 {status && <p className=\"status\">{status}</p>}\n//                 <h1>Register</h1><br />\n//                 <form className=\"register-form\" onSubmit={handleSubmit}>\n//                     <label htmlFor=\"firstName\">First Name</label>\n//                     <input value={firstName} onChange={(e) => setFirstName(e.target.value)} name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" />\n//                     {errors.firstName && <p className=\"error\">{errors.firstName}</p>}\n\n//                     <label htmlFor=\"lastName\">Last Name</label>\n//                     <input value={lastName} onChange={(e) => setLastName(e.target.value)} name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" />\n//                     {errors.lastName && <p className=\"error\">{errors.lastName}</p>}\n\n//                     <label htmlFor=\"username\">Username</label>\n//                     <input value={username} onChange={(e) => setUsername(e.target.value)} name=\"username\" id=\"username\" placeholder=\"Username\" />\n//                     {errors.username && <p className=\"error\">{errors.username}</p>}\n\n//                     <label htmlFor=\"email\">Email</label>\n//                     <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\n//                     {errors.email && <p className=\"error\">{errors.email}</p>}\n\n//                     <label htmlFor=\"password\">password</label>\n//                     <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"******\" id=\"password\" name=\"password\" />\n//                     {errors.password && <p className=\"error\">{errors.password}</p>}\n\n//                     <label htmlFor=\"role\">Role</label>\n//                     <select value={role} onChange={e => setRole(e.target.value)}>\n//                         <option placeholder=\"Select Role\"> </option>\n//                         <option value=\"Student\">Student</option>\n//                         <option value=\"Teacher\">Teacher</option>\n//                     </select>\n//                     {errors.role && <p className=\"error\">{errors.role}</p>}\n\n//                     <label htmlFor=\"userID\">UserID</label>\n//                     <input value={userID} onChange={(e) => setUserId(e.target.value)} placeholder=\"UserID\" id=\"userID\" name=\"userID\" />\n//                     {errors.userID && <p className=\"error\">{errors.userID}</p>}\n\n\n//                     <button className=\"registerbtn\" type=\"Submit\" onClick={handleSubmit}><b>Register</b></button>\n//                 </form>\n//                 <br />\n//                 <h4>Already have an account?</h4>\n//                 <Link to=\"/login\" className=\"link-button\"><h5>Login here</h5></Link>\n\n//             </div>\n//         </div>\n//     )\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}